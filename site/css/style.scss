/**** VARIABLES ****/
// Sizes of different "nodes"
$circ-size-l: 250px;
$circ-size-m: 200px;
$circ-size-s: 150px;

/* Variable Colors */
$special-blue: rgba(30, 150, 220, 1.0);
$accent-color: rgb(20, 200, 180);
$accent-color-light: rgba(20, 200, 180, 0.2);
$bright-accent: rgba(220, 80, 20, 0.6);

$general-font: "Neuton", sans-serif;

/**** MIXINS ****/
// I made a mixin for this because it's used in a couple of different places which need to match exactly
@mixin frame-images {
    position: absolute;
    top: 45%;
    left: 0;
    
    transform: rotateZ(30deg) translateY(-50%);
    transform-origin: 15% 15%;
}

// Just some shorthand to reliably position an element in the center of its parent
@mixin center-in-parent {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/**** HEADINGS ****/
// The sites main heading
#site-title {
    display: inline-block; // so that the border doesn't extend across the page
    
    text-align: center;
    font-family: 'Satisfy';
    font-size: 70px;
    font-weight: 100;
    
    margin: 20px auto; // Center horizontally
    padding: 0 10px;
    
    color: $special-blue;
    border-bottom: solid 1px $special-blue;
}

// This is a strange bit of code which basically checks to see if the "background-clip" property is supported
@media screen and (-webkit-min-device-pixel-ratio:0) {
    #site-title {
        color: transparent;
        background: linear-gradient($accent-color, $special-blue);
        -webkit-background-clip: text; // EXPERIMENTAL (uses the text to "clip" out the background gradient)
    }
}

#site-subtitle {
    text-align: center;
    text-transform: lowercase;
    
    margin: 0 0 20px 0;
    
    font-weight: 100;
    font-size: 20px;
}

/**** SCALE BUTTON ***/
// This div contains the icon and text
#scale-box{
    z-index: 30;
    position: fixed;
    top: 0;
    right: 0;
    width: 250px;
    height: 70px;
    
    cursor: pointer;
}
#scale-button {    
    position: absolute; // relative to parent box
    top: 0;
    right: 0;
    
    height: 30px;
    width: 30px;
    font-size: 30px;
    
    padding: 20px;
    
    color: $bright-accent;
    
    i{
        @include center-in-parent;
    }
}
#scale-text-1, #scale-text-2{
    position: absolute; // relative to parent box
    top: 0;
    right: 70px;
    
    line-height: 70px;
    text-transform: lowercase;
    
    font-family: "Comfortaa";
    font-size: 14px;
    
    color: $bright-accent;
}
// Defaults to hidden
#scale-text-2{
    display: none;
}

/**** BODY ****/
body {
    margin: 0;
    position: relative;
    
    text-align: center;
    font-family: $general-font;
    
    overflow-x: hidden;
}

// background gradient
.bg-fill {
    z-index: -2;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
    background: linear-gradient(to bottom, $accent-color-light 0%, white 100%);
}

.content-section {
    display: flex;
    flex-wrap: wrap;
    .spacer {
        //flex: 2;
    }
}

/**** NODES ****/
// The box of text which pops up when hovering over a "node"
.taxon-info {
    z-index: 20;
    position: relative;
    opacity: 0.0; // hidden by default
    
    border-top: dotted 1px $special-blue;
    border-bottom: dotted 1px $special-blue;
    
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.6) 100%); // slight gradient
    
    padding: 10px;
    margin: 5px auto;
    
    max-width: 500px;
    text-align: left;
    transform: translateY(20px); // This is animated in the hover
    transition: .3s all;
    p {
        margin: 0;
    }
}
// Triangle above box
.taxon-info:before {
    content: "";
    position: absolute;
    left: calc(50% - 25px);
    top: -65px;
    width: 50px;
    height: 20px;
    box-sizing: border-box;
    // Trick to make triangle from border
    border-bottom: solid 20px $accent-color;
    border-left: solid 25px transparent;
    border-right: solid 25px transparent;
}

.taxon-container {
    flex: 1;
    position: relative;
    text-align: center;
    margin: 10px;
    display: inline-block;
    cursor: pointer;
    min-width: 250px;
    i {
        pointer-events: none;
        opacity: 0.0;
        z-index: 15;
        font-size: 40px;
        position: absolute;
        left: 0;
        top: 20px;
        width: 100%;
        text-align: center;
        color: $bright-accent;
        transition: .3s all;
    }
    .audio-active {
        opacity: 1.0;
        animation: pulse 2s infinite;
    }
    .frame-box {
        position: absolute;
        display: inline-block;
        width: 200px;
        height: 200px;
        padding: 20px;
        border: solid 4px transparent;
        box-sizing: border-box;
        .double {
            @include frame-images;
            animation-timing-function: ease-in-out;
            opacity: 0.0;
            transition: .5s all;
        }
    }
    .frame-box.shown .double{
        opacity: 0.8;
        transition: .3s all;
    }
    .taxon-frame {
        z-index: 10;
        display: inline-block;
        text-align: left;
        width: 200px;
        height: 200px;
        overflow: hidden;
        position: relative;
        box-sizing: border-box;
        padding: 20px;
        border: solid 4px $special-blue;
        border-radius: 50% 50%;
        transition: 1s all;
        img {
            @include frame-images;
            opacity: 0.8;
            transition: .3s all linear;
        }
        .extra-frame {
            pointer-events: none;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            border: solid 1px $accent-color;
            border-radius: 50% 50%;
            //background-color: $accent-color;
            opacity: 0.0;
            transition: .3s all;
        }
    }
    .taxon-frame.faded {
        transition: 1s all;
        border: solid 4px transparentize($special-blue, 0.9);
    }
    h1 {
        font-family: 'Comfortaa';
        text-transform: uppercase;
        letter-spacing: 4px;
        margin: 15px;
        font-size: 13px;
        color: $special-blue;
    }
}

.taxon-container.large {
    .frame-box {
        width: $circ-size-l;
        height: $circ-size-l;
    }
    .taxon-frame {
        width: $circ-size-l;
        height: $circ-size-l;
    }
}

.taxon-container.small {
    .frame-box {
        width: $circ-size-s;
        height: $circ-size-s;
    }
    .taxon-frame {
        width: $circ-size-s;
        height: $circ-size-s;
    }
}

.taxon-container.hover {
    .extra-frame {
        opacity: 1.0;
        transform: scale(0.9, 0.9);
        transition: .3s all;
    }
    .taxon-frame {
        //transform: scale(1.1, 1.1);
        //overflow: visible;
        img {
            opacity: 0.2;
            transition: .8s all linear;
        }
    }
    i {
        opacity: 1.0;
        transition: .3s all;
    }
    .frame-box {
        img {
            opacity: 0.8;
            transition: .5s all linear;
        }
    }
    .taxon-info {
        opacity: 1.0;
        transform: translateY(0);
        transition: .3s all;
    }
    h1 {
        color: $accent-color;
    }
}

footer {
    position: relative;
    z-index: 30;
    padding: 40px;
    
    p{
        font-size: 12px;
    }
}

.sources {
    ul {
        list-style: none;
        padding: 0;
        a{
            text-decoration: none;
            color: $bright-accent;
        }
        a::before{
            content: "- ";
        }
        a::after{
            content: " -";
        }
    }
}

/**** ACCENTS ****/
.bubbles-container {
    z-index: -1;
    position: fixed;
    width: 100%;
    height: 100%;
}

.bubble {
    z-index: -1;
    position: absolute;
    width: 20px;
    height: 20px;
    background-color: rgba(30, 150, 220, 0.2);
    background: linear-gradient(to top left, rgba(30, 150, 220, 0.3) 0%, transparent 100%);
    border-radius: 100% 100%;
    border: solid 1px rgba(255, 255, 255, 0.8);
}

.bg-paths {
    z-index: 1;
    position: absolute;
    width: 100%;
    height: 100%;
    svg {
        width: 100%;
        height: 100%;
    }
}

// The paths between "nodes"
.link-path {
    stroke: rgba(30, 150, 220, 0.3);
    stroke-width: 4;
    fill: transparent;
}

/**** ANIMATIONS ****/
@keyframes pulse {
    0% {
        color: $bright-accent;
    }
    50% {
        color: rgba(220, 80, 20, 1.0);
    }
    100% {
        color: $bright-accent;
    }
}

// This isn't a very good solution, but it works for now - just hide paths below a certain screen size.
@media (max-width: 1080px){
    .bg-paths{
        display: none;
    }
}